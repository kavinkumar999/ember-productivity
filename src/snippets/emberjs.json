{
  "functionNoParams": {
    "prefix": "func",
    "body": [
      "function ${1:functionName}() {",
      "\t${2}",
      "}"
    ],
    "description": "Function with no parameters"
  },
  
  "functionOneParam": {
    "prefix": "func1",
    "body": [
      "function ${1:functionName}(${2:param}) {",
      "\t${3}",
      "}"
    ],
    "description": "Function with one parameter"
  },
  
  "functionTwoParams": {
    "prefix": "func2",
    "body": [
      "function ${1:functionName}(${2:param1}, ${3:param2}) {",
      "\t${4}",
      "}"
    ],
    "description": "Function with two parameters"
  },
  
  "functionThreeParams": {
    "prefix": "func3",
    "body": [
      "function ${1:functionName}(${2:param1}, ${3:param2}, ${4:param3}) {",
      "\t${5}",
      "}"
    ],
    "description": "Function with three parameters"
  },
  
  "computedProperty": {
    "prefix": "cu",
    "body": [
      "${1:computedPropertyName}: computed('${2:propertyToBeWatched}', function() {",
      "\treturn ${3};",
      "})"
    ],
    "description": "Computed property"
  },
  
  "computedPropertyGetterSetter": {
    "prefix": "cugs",
    "body": [
      "${1:computedPropertyName}: computed('${2:propertyToBeWatched}', {",
      "\tget() {",
      "\t\t${3}",
      "\t},",
      "\tset(key, value) {",
      "\t\t${4:/* set logic here */}",
      "\t}",
      "})"
    ],
    "description": "Computed property with getter and setter"
  },
  
  "importRsvp": {
    "prefix": "imp rsvp",
    "body": [
      "import { ${1:module} } from '@ember/rsvp';"
    ],
    "description": "Import from @ember/rsvp"
  },
  
  "importUtils": {
    "prefix": "imp utils",
    "body": [
      "import { ${1:module} } from '@ember/utils';"
    ],
    "description": "Import from @ember/utils"
  },
  
  "importService": {
    "prefix": "imp service",
    "body": [
      "import { service } from '@ember/service';"
    ],
    "description": "Import from @ember/service"
  },
  
  "importObject": {
    "prefix": "imp object",
    "body": [
      "import { ${1:module} } from '@ember/object';"
    ],
    "description": "Import from @ember/object"
  },
  
  "importComputed": {
    "prefix": "imp comp",
    "body": [
      "import { ${1:module} } from '@ember/object/computed';"
    ],
    "description": "Import from @ember/object/computed"
  },
  
  "classMethodNoParams": {
    "prefix": "efunc",
    "body": [
      "${1:methodName}() {",
      "\t${2}",
      "}"
    ],
    "description": "Class method with no parameters"
  },
  
  "classMethodOneParam": {
    "prefix": "efunc1",
    "body": [
      "${1:methodName}(${2:param}) {",
      "\t${3}",
      "}"
    ],
    "description": "Class method with one parameter"
  },
  
  "classMethodTwoParams": {
    "prefix": "efunc2",
    "body": [
      "${1:methodName}(${2:param1}, ${3:param2}) {",
      "\t${4}",
      "}"
    ],
    "description": "Class method with two parameters"
  },
  
  "classMethodThreeParams": {
    "prefix": "efunc3",
    "body": [
      "${1:methodName}(${2:param1}, ${3:param2}, ${4:param3}) {",
      "\t${5}",
      "}"
    ],
    "description": "Class method with three parameters"
  },
  
  "componentGlimmerJS": {
    "prefix": "comp-g",
    "body": [
      "import Component from '@glimmer/component';",
      "",
      "export default class ${1:ComponentName} extends Component {",
      "\t${2}",
      "}"
    ],
    "description": "Basic Ember Octane/Glimmer component in JavaScript"
  },
  
  "componentJS": {
    "prefix": "comp",
    "body": [
      "import Component from '@ember/component';",
      "",
      "export default Component.extend({",
      "\t${1}",
      "});"
    ],
    "description": "Basic Ember classic component in JavaScript"
  },
  
  "routeGlimmerJS": {
    "prefix": "route-g",
    "body": [
      "import Route from '@ember/routing/route';",
      "",
      "export default class ${1:RouteName} extends Route {",
      "\tmodel() {",
      "\t\t${2}",
      "\t}",
      "}"
    ],
    "description": "Basic Ember Octane route in JavaScript"
  },
  
  "routeJS": {
    "prefix": "route",
    "body": [
      "import Route from '@ember/routing/route';",
      "",
      "export default Route.extend({",
      "\tmodel() {",
      "\t\t${1}",
      "\t}",
      "});"
    ],
    "description": "Basic Ember Octane route in JavaScript"
  },
  
  "serviceGlimmerJS": {
    "prefix": "service-g",
    "body": [
      "import Service from '@ember/service';",
      "",
      "export default class ${1:ServiceName} extends Service {",
      "\t${2}",
      "}"
    ],
    "description": "Basic Ember Octane service in JavaScript"
  },
  
  "serviceJS": {
    "prefix": "service",
    "body": [
      "import Service from '@ember/service';",
      "",
      "export default Service.extend({",
      "\t${1}",
      "});"
    ],
    "description": "Basic Ember Octane service in JavaScript"
  },
  
  "controllerGlimmerJS": {
    "prefix": "controller-g",
    "body": [
      "import Controller from '@ember/controller';",
      "",
      "export default class ${1:ControllerName} extends Controller {",
      "\t${2}",
      "}"
    ],
    "description": "Basic Ember Octane controller in JavaScript"
  },
  
  "controllerJS": {
    "prefix": "controller",
    "body": [
      "import Controller from '@ember/controller';",
      "",
      "export default Controller.extend({",
      "\t${1}",
      "});"
    ],
    "description": "Basic Ember Octane controller in JavaScript"
  },
  
  "componentTS": {
    "prefix": "comp-ts",
    "body": [
      "import Component from '@glimmer/component';",
      "",
      "interface ${1:ComponentName}Args {",
      "\t// Define your component arguments here",
      "}",
      "",
      "export default class ${1:ComponentName} extends Component<${1:ComponentName}Args> {",
      "\t// Component logic here",
      "}"
    ],
    "description": "Basic Ember Octane/Glimmer component in TypeScript"
  }
}
