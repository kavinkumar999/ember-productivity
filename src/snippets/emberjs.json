{
  "emberComputedProperty": {
    "prefix": "ecomputed",
    "body": [
      "get ${1:computedPropertyName}() {",
      "  return ${2:// Computed property implementation};",
      "}"
    ],
    "description": "Ember computed property getter"
  },
  "emberComputedPropertyClassic": {
    "prefix": "ecomputed-classic",
    "body": [
      "${1:computedPropertyName}: computed('${2:dependentKey}', function() {",
      "  return ${3:// Computed property implementation};",
      "})"
    ],
    "description": "Ember classic computed property"
  },
  "emberComponentOctane": {
    "prefix": "ecomponent",
    "body": [
      "import Component from '@glimmer/component';",
      "import { action } from '@ember/object';",
      "",
      "export default class ${1:ComponentName} extends Component {",
      "  @action",
      "  ${2:handleAction}() {",
      "    ${3:// Action implementation}",
      "  }",
      "}"
    ],
    "description": "Ember Octane component class"
  },
  "emberComponentClassic": {
    "prefix": "ecomponent-classic",
    "body": [
      "import Component from '@ember/component';",
      "",
      "export default Component.extend({",
      "  ${1:// component properties and methods}",
      "  actions: {",
      "    ${2:actionName}() {",
      "      ${3:// Action implementation}",
      "    }",
      "  }",
      "});"
    ],
    "description": "Ember classic component"
  },
  "emberRouteOctane": {
    "prefix": "eroute",
    "body": [
      "import Route from '@ember/routing/route';",
      "",
      "export default class ${1:RouteName} extends Route {",
      "  async model(params) {",
      "    ${2:// Fetch and return the model}",
      "  }",
      "}"
    ],
    "description": "Ember Octane Route class"
  },
  "emberRouteClassic": {
    "prefix": "eroute-classic",
    "body": [
      "import Route from '@ember/routing/route';",
      "",
      "export default Route.extend({",
      "  model(params) {",
      "    ${1:// Fetch and return the model}",
      "  }",
      "});"
    ],
    "description": "Ember classic Route"
  },
  "emberControllerOctane": {
    "prefix": "econtroller",
    "body": [
      "import Controller from '@ember/controller';",
      "import { action } from '@ember/object';",
      "import { tracked } from '@glimmer/tracking';",
      "",
      "export default class ${1:ControllerName} extends Controller {",
      "  @tracked ${2:property} = ${3:initialValue};",
      "",
      "  @action",
      "  ${4:handleAction}() {",
      "    ${5:// Action implementation}",
      "  }",
      "}"
    ],
    "description": "Ember Octane Controller class"
  },
  "emberControllerClassic": {
    "prefix": "econtroller-classic",
    "body": [
      "import Controller from '@ember/controller';",
      "import { computed } from '@ember/object';",
      "",
      "export default Controller.extend({",
      "  ${1:property}: null,",
      "",
      "  ${2:computedProperty}: computed('${3:dependentKey}', function() {",
      "    ${4:// Computed property implementation}",
      "  }),",
      "",
      "  actions: {",
      "    ${5:actionName}() {",
      "      ${6:// Action implementation}",
      "    }",
      "  }",
      "});"
    ],
    "description": "Ember classic Controller"
  },
  "emberServiceOctane": {
    "prefix": "eservice",
    "body": [
      "import Service from '@ember/service';",
      "import { tracked } from '@glimmer/tracking';",
      "",
      "export default class ${1:ServiceName} extends Service {",
      "  @tracked ${2:property} = ${3:initialValue};",
      "",
      "  ${4:methodName}() {",
      "    ${5:// Method implementation}",
      "  }",
      "}"
    ],
    "description": "Ember Octane Service class"
  },
  "emberServiceClassic": {
    "prefix": "eservice-classic",
    "body": [
      "import Service from '@ember/service';",
      "",
      "export default Service.extend({",
      "  ${1:property}: null,",
      "",
      "  ${2:methodName}() {",
      "    ${3:// Method implementation}",
      "  }",
      "});"
    ],
    "description": "Ember classic Service"
  },
  "emberHelperOctane": {
    "prefix": "ehelper",
    "body": [
      "import { helper } from '@ember/component/helper';",
      "",
      "function ${1:helperName}([${2:param1}, ${3:param2}], hash) {",
      "  ${4:// Helper implementation}",
      "}",
      "",
      "export default helper(${1:helperName});"
    ],
    "description": "Ember Octane Helper function"
  },
  "emberHelperClassic": {
    "prefix": "ehelper-classic",
    "body": [
      "import { helper } from '@ember/component/helper';",
      "",
      "export function ${1:helperName}([${2:param1}, ${3:param2}], hash) {",
      "  ${4:// Helper implementation}",
      "}",
      "",
      "export default helper(${1:helperName});"
    ],
    "description": "Ember classic Helper function"
  },
  "emberActionOctane": {
    "prefix": "eaction",
    "body": [
      "@action",
      "${1:actionName}(${2:event}) {",
      "  ${3:// Action implementation}",
      "}"
    ],
    "description": "Ember Octane action method"
  },
  "emberActionClassic": {
    "prefix": "eaction-classic",
    "body": [
      "actions: {",
      "  ${1:actionName}(${2:event}) {",
      "    ${3:// Action implementation}",
      "  }",
      "}"
    ],
    "description": "Ember classic action method"
  },
  "emberTestOctane": {
    "prefix": "etest",
    "body": [
      "import { module, test } from 'qunit';",
      "import { setupTest } from 'ember-qunit';",
      "",
      "module('${1:ModuleName}', function(hooks) {",
      "  setupTest(hooks);",
      "",
      "  test('${2:it does something}', async function(assert) {",
      "    ${3:// Test implementation}",
      "    assert.ok(true);",
      "  });",
      "});"
    ],
    "description": "Ember Octane test module"
  },
  "emberModelOctane": {
    "prefix": "emodel",
    "body": [
      "import Model, { attr, belongsTo, hasMany } from '@ember-data/model';",
      "",
      "export default class ${1:ModelName} extends Model {",
      "  @attr('string') ${2:attribute1};",
      "  @attr('number') ${3:attribute2};",
      "  @belongsTo('${4:otherModel}') ${5:relationship1};",
      "  @hasMany('${6:anotherModel}') ${7:relationship2};",
      "}"
    ],
    "description": "Ember Octane Data model"
  },
  "emberModelClassic": {
    "prefix": "emodel-classic",
    "body": [
      "import DS from 'ember-data';",
      "",
      "export default DS.Model.extend({",
      "  ${1:attribute1}: DS.attr('string'),",
      "  ${2:attribute2}: DS.attr('number'),",
      "  ${3:relationship1}: DS.belongsTo('${4:otherModel}'),",
      "  ${5:relationship2}: DS.hasMany('${6:anotherModel}')",
      "});"
    ],
    "description": "Ember classic Data model"
  }
}
